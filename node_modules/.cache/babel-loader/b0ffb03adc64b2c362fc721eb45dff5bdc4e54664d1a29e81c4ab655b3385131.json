{"ast":null,"code":"import CompletedProjects from '@/components/CompletedProjects.vue';\nimport ServiceCalculator from '@/components/ServiceCalculator.vue';\nexport default {\n  name: 'ServiceDetails',\n  components: {\n    CompletedProjects,\n    ServiceCalculator\n  },\n  data() {\n    return {\n      service: {\n        id: '',\n        title: '',\n        description: '',\n        image: '',\n        features: [],\n        projects: []\n      }\n    };\n  },\n  created() {\n    // Здесь будет логика получения данных об услуге по ID из параметров маршрута\n    const serviceId = this.$route.params.id;\n    // TODO: Заменить на реальный API-запрос\n    this.fetchServiceData(serviceId);\n  },\n  methods: {\n    fetchServiceData(serviceId) {\n      // Временные данные для демонстрации\n      this.service = {\n        id: serviceId,\n        title: 'Название услуги',\n        description: 'Подробное описание услуги...',\n        image: '/path/to/image.jpg',\n        features: ['Преимущество 1', 'Преимущество 2', 'Преимущество 3'],\n        projects: [{\n          id: 1,\n          title: 'Проект 1',\n          description: 'Описание проекта 1',\n          image: '/path/to/project1.jpg',\n          date: '2024',\n          location: 'Москва'\n        }\n        // Добавьте больше проектов по необходимости\n        ]\n      };\n    }\n  }\n};","map":{"version":3,"names":["CompletedProjects","ServiceCalculator","name","components","data","service","id","title","description","image","features","projects","created","serviceId","$route","params","fetchServiceData","methods","date","location"],"sources":["C:\\region24-website\\src\\views\\ServiceDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"service-details\">\r\n    <div class=\"service-header\">\r\n      <h1 class=\"service-title\">{{ service.title }}</h1>\r\n      <div class=\"service-image\">\r\n        <img :src=\"service.image\" :alt=\"service.title\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"service-content\">\r\n      <div class=\"service-description\">\r\n        <h2>Описание услуги</h2>\r\n        <p>{{ service.description }}</p>\r\n      </div>\r\n\r\n      <div class=\"service-features\">\r\n        <h2>Преимущества</h2>\r\n        <ul>\r\n          <li v-for=\"(feature, index) in service.features\" :key=\"index\">\r\n            {{ feature }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <CompletedProjects :projects=\"service.projects\" />\r\n      \r\n      <ServiceCalculator :serviceTypes=\"[service]\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CompletedProjects from '@/components/CompletedProjects.vue'\r\nimport ServiceCalculator from '@/components/ServiceCalculator.vue'\r\n\r\nexport default {\r\n  name: 'ServiceDetails',\r\n  components: {\r\n    CompletedProjects,\r\n    ServiceCalculator\r\n  },\r\n  data() {\r\n    return {\r\n      service: {\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        image: '',\r\n        features: [],\r\n        projects: []\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // Здесь будет логика получения данных об услуге по ID из параметров маршрута\r\n    const serviceId = this.$route.params.id\r\n    // TODO: Заменить на реальный API-запрос\r\n    this.fetchServiceData(serviceId)\r\n  },\r\n  methods: {\r\n    fetchServiceData(serviceId) {\r\n      // Временные данные для демонстрации\r\n      this.service = {\r\n        id: serviceId,\r\n        title: 'Название услуги',\r\n        description: 'Подробное описание услуги...',\r\n        image: '/path/to/image.jpg',\r\n        features: [\r\n          'Преимущество 1',\r\n          'Преимущество 2',\r\n          'Преимущество 3'\r\n        ],\r\n        projects: [\r\n          {\r\n            id: 1,\r\n            title: 'Проект 1',\r\n            description: 'Описание проекта 1',\r\n            image: '/path/to/project1.jpg',\r\n            date: '2024',\r\n            location: 'Москва'\r\n          },\r\n          // Добавьте больше проектов по необходимости\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.service-details {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.service-header {\r\n  margin-bottom: 3rem;\r\n}\r\n\r\n.service-title {\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.service-image {\r\n  width: 100%;\r\n  height: 400px;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n}\r\n\r\n.service-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.service-content {\r\n  display: grid;\r\n  gap: 4rem;\r\n}\r\n\r\n.service-description,\r\n.service-features {\r\n  max-width: 800px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.8rem;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.service-description p {\r\n  font-size: 1.1rem;\r\n  line-height: 1.6;\r\n  color: #666;\r\n}\r\n\r\n.service-features ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.service-features li {\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n  padding: 0.5rem 0;\r\n  padding-left: 1.5rem;\r\n  position: relative;\r\n}\r\n\r\n.service-features li::before {\r\n  content: \"•\";\r\n  color: #4CAF50;\r\n  position: absolute;\r\n  left: 0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .service-details {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .service-title {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .service-image {\r\n    height: 300px;\r\n  }\r\n}\r\n</style> "],"mappings":"AAgCA,OAAOA,iBAAgB,MAAO,oCAAmC;AACjE,OAAOC,iBAAgB,MAAO,oCAAmC;AAEjE,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVH,iBAAiB;IACjBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACT,EAAC;IACtC;IACA,IAAI,CAACU,gBAAgB,CAACH,SAAS;EACjC,CAAC;EACDI,OAAO,EAAE;IACPD,gBAAgBA,CAACH,SAAS,EAAE;MAC1B;MACA,IAAI,CAACR,OAAM,GAAI;QACbC,EAAE,EAAEO,SAAS;QACbN,KAAK,EAAE,iBAAiB;QACxBC,WAAW,EAAE,8BAA8B;QAC3CC,KAAK,EAAE,oBAAoB;QAC3BC,QAAQ,EAAE,CACR,gBAAgB,EAChB,gBAAgB,EAChB,gBAAe,CAChB;QACDC,QAAQ,EAAE,CACR;UACEL,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,UAAU;UACjBC,WAAW,EAAE,oBAAoB;UACjCC,KAAK,EAAE,uBAAuB;UAC9BS,IAAI,EAAE,MAAM;UACZC,QAAQ,EAAE;QACZ;QACA;QAAA;MAEJ;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}