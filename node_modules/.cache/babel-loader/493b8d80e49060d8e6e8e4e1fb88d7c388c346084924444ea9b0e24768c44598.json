{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"projects\"\n};\nconst _hoisted_2 = {\n  class: \"projects-grid\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"projects-filters\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"projects-list\"\n};\nconst _hoisted_7 = {\n  class: \"project-image\"\n};\nconst _hoisted_8 = [\"src\", \"alt\"];\nconst _hoisted_9 = {\n  class: \"project-content\"\n};\nconst _hoisted_10 = {\n  class: \"project-description\"\n};\nconst _hoisted_11 = {\n  class: \"project-meta\"\n};\nconst _hoisted_12 = {\n  class: \"project-category\"\n};\nconst _hoisted_13 = {\n  class: \"project-date\"\n};\nimport { ref, computed } from 'vue';\nexport default {\n  __name: 'Projects',\n  setup(__props) {\n    const categories = ['Все', 'Кровельные работы', 'Отделочные работы', 'Бетонные работы'];\n    const selectedCategory = ref('Все');\n    const projects = ref([{\n      id: 1,\n      title: 'Кровельные работы в жилом доме',\n      description: 'Комплексные кровельные работы с использованием современных материалов',\n      category: 'Кровельные работы',\n      date: '15 марта 2024',\n      image: '/images/projects/project1.jpg'\n    }, {\n      id: 2,\n      title: 'Отделка квартиры',\n      description: 'Полный цикл отделочных работ в современном стиле',\n      category: 'Отделочные работы',\n      date: '10 марта 2024',\n      image: '/images/projects/project2.jpg'\n    }, {\n      id: 3,\n      title: 'Бетонные работы на объекте',\n      description: 'Профессиональное бетонирование с использованием современной техники',\n      category: 'Бетонные работы',\n      date: '5 марта 2024',\n      image: '/images/projects/project3.jpg'\n    }]);\n    const filteredProjects = computed(() => {\n      if (selectedCategory.value === 'Все') {\n        return projects.value;\n      }\n      return projects.value.filter(project => project.category === selectedCategory.value);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"section\", {\n        class: \"projects-header\"\n      }, [_createElementVNode(\"div\", {\n        class: \"container\"\n      }, [_createElementVNode(\"h1\", {\n        class: \"text-center\"\n      }, \"Наши проекты\"), _createElementVNode(\"p\", {\n        class: \"text-center\"\n      }, \"Ознакомьтесь с нашими реализованными проектами\")])], -1)), _createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(categories, category => {\n        return _createElementVNode(\"button\", {\n          key: category,\n          class: _normalizeClass(['filter-btn', {\n            active: selectedCategory.value === category\n          }]),\n          onClick: $event => selectedCategory.value = category\n        }, _toDisplayString(category), 11, _hoisted_5);\n      }), 64))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredProjects.value, project => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: project.id,\n          class: \"project-card\"\n        }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n          src: project.image,\n          alt: project.title\n        }, null, 8, _hoisted_8)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h3\", null, _toDisplayString(project.title), 1), _createElementVNode(\"p\", _hoisted_10, _toDisplayString(project.description), 1), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString(project.category), 1), _createElementVNode(\"span\", _hoisted_13, _toDisplayString(project.date), 1)])])]);\n      }), 128))])])])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","categories","selectedCategory","projects","id","title","description","category","date","image","filteredProjects","value","filter","project"],"sources":["C:/region24-website/src/views/Projects.vue"],"sourcesContent":["<template>\r\n  <div class=\"projects\">\r\n    <!-- Projects Header -->\r\n    <section class=\"projects-header\">\r\n      <div class=\"container\">\r\n        <h1 class=\"text-center\">Наши проекты</h1>\r\n        <p class=\"text-center\">Ознакомьтесь с нашими реализованными проектами</p>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Projects Grid -->\r\n    <section class=\"projects-grid\">\r\n      <div class=\"container\">\r\n        <div class=\"projects-filters\">\r\n          <button \r\n            v-for=\"category in categories\" \r\n            :key=\"category\"\r\n            :class=\"['filter-btn', { active: selectedCategory === category }]\"\r\n            @click=\"selectedCategory = category\"\r\n          >\r\n            {{ category }}\r\n          </button>\r\n        </div>\r\n        <div class=\"projects-list\">\r\n          <div \r\n            v-for=\"project in filteredProjects\" \r\n            :key=\"project.id\" \r\n            class=\"project-card\"\r\n          >\r\n            <div class=\"project-image\">\r\n              <img :src=\"project.image\" :alt=\"project.title\">\r\n            </div>\r\n            <div class=\"project-content\">\r\n              <h3>{{ project.title }}</h3>\r\n              <p class=\"project-description\">{{ project.description }}</p>\r\n              <div class=\"project-meta\">\r\n                <span class=\"project-category\">{{ project.category }}</span>\r\n                <span class=\"project-date\">{{ project.date }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\n\r\nconst categories = [\r\n  'Все',\r\n  'Кровельные работы',\r\n  'Отделочные работы',\r\n  'Бетонные работы'\r\n]\r\n\r\nconst selectedCategory = ref('Все')\r\n\r\nconst projects = ref([\r\n  {\r\n    id: 1,\r\n    title: 'Кровельные работы в жилом доме',\r\n    description: 'Комплексные кровельные работы с использованием современных материалов',\r\n    category: 'Кровельные работы',\r\n    date: '15 марта 2024',\r\n    image: '/images/projects/project1.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Отделка квартиры',\r\n    description: 'Полный цикл отделочных работ в современном стиле',\r\n    category: 'Отделочные работы',\r\n    date: '10 марта 2024',\r\n    image: '/images/projects/project2.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Бетонные работы на объекте',\r\n    description: 'Профессиональное бетонирование с использованием современной техники',\r\n    category: 'Бетонные работы',\r\n    date: '5 марта 2024',\r\n    image: '/images/projects/project3.jpg'\r\n  }\r\n])\r\n\r\nconst filteredProjects = computed(() => {\r\n  if (selectedCategory.value === 'Все') {\r\n    return projects.value\r\n  }\r\n  return projects.value.filter(project => project.category === selectedCategory.value)\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/main.scss';\r\n\r\n.projects {\r\n  background-color: $light-gray;\r\n\r\n  .projects-header {\r\n    background-color: $light-gray;\r\n    padding: 5rem 0;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.2rem;\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n\r\n  .projects-grid {\r\n    padding: 5rem 0;\r\n  }\r\n\r\n  .projects-filters {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    margin-bottom: 3rem;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .filter-btn {\r\n    padding: 0.75rem 1.5rem;\r\n    border: 1px solid $primary-color;\r\n    border-radius: 4px;\r\n    background: none;\r\n    color: $primary-color;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      background: rgba($primary-color, 0.1);\r\n    }\r\n\r\n    &.active {\r\n      background: $primary-color;\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  .projects-list {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    gap: 2rem;\r\n  }\r\n\r\n  .project-card {\r\n    background: white;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: translateY(-5px);\r\n    }\r\n\r\n    .project-image {\r\n      height: 200px;\r\n      overflow: hidden;\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        transition: transform 0.3s ease;\r\n      }\r\n\r\n      &:hover img {\r\n        transform: scale(1.05);\r\n      }\r\n    }\r\n\r\n    .project-content {\r\n      padding: 1.5rem;\r\n\r\n      h3 {\r\n        margin: 0 0 0.5rem;\r\n      }\r\n\r\n      .project-description {\r\n        color: #666;\r\n        margin-bottom: 1rem;\r\n      }\r\n\r\n      .project-meta {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: 0.875rem;\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;;;;IAEnC,MAAMC,UAAU,GAAG,CACjB,KAAK,EACL,mBAAmB,EACnB,mBAAmB,EACnB,iBAAiB,CAClB;IAED,MAAMC,gBAAgB,GAAGH,GAAG,CAAC,KAAK,CAAC;IAEnC,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,CACnB;MACEK,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,gCAAgC;MACvCC,WAAW,EAAE,uEAAuE;MACpFC,QAAQ,EAAE,mBAAmB;MAC7BC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE;IACT,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,kBAAkB;MACzBC,WAAW,EAAE,kDAAkD;MAC/DC,QAAQ,EAAE,mBAAmB;MAC7BC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE;IACT,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,4BAA4B;MACnCC,WAAW,EAAE,qEAAqE;MAClFC,QAAQ,EAAE,iBAAiB;MAC3BC,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE;IACT,CAAC,CACF,CAAC;IAEF,MAAMC,gBAAgB,GAAGV,QAAQ,CAAC,MAAM;MACtC,IAAIE,gBAAgB,CAACS,KAAK,KAAK,KAAK,EAAE;QACpC,OAAOR,QAAQ,CAACQ,KAAK;MACvB;MACA,OAAOR,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACN,QAAQ,KAAKL,gBAAgB,CAACS,KAAK,CAAC;IACtF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}