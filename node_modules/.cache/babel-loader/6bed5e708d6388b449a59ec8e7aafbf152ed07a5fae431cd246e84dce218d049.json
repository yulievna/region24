{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-projects\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"projects-grid\"\n};\nconst _hoisted_4 = {\n  class: \"project-image\"\n};\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"project-content\"\n};\nconst _hoisted_7 = {\n  class: \"project-description\"\n};\nconst _hoisted_8 = {\n  class: \"project-meta\"\n};\nconst _hoisted_9 = {\n  class: \"project-category\"\n};\nconst _hoisted_10 = {\n  class: \"project-date\"\n};\nconst _hoisted_11 = {\n  class: \"project-actions\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_15 = {\n  class: \"modal-content\"\n};\nconst _hoisted_16 = {\n  class: \"modal-header\"\n};\nconst _hoisted_17 = {\n  class: \"form-group\"\n};\nconst _hoisted_18 = {\n  class: \"form-group\"\n};\nconst _hoisted_19 = {\n  class: \"form-group\"\n};\nconst _hoisted_20 = {\n  class: \"form-group\"\n};\nconst _hoisted_21 = {\n  class: \"form-group\"\n};\nconst _hoisted_22 = {\n  class: \"form-actions\"\n};\nconst _hoisted_23 = {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n};\nimport { ref } from 'vue';\nexport default {\n  __name: 'Projects',\n  setup(__props) {\n    const projects = ref([{\n      id: 1,\n      title: 'Кровельные работы в жилом доме',\n      description: 'Комплексные кровельные работы с использованием современных материалов',\n      category: 'Кровельные работы',\n      date: '2024-03-15',\n      image: '/images/projects/project1.jpg'\n    }, {\n      id: 2,\n      title: 'Отделка квартиры',\n      description: 'Полный цикл отделочных работ в современном стиле',\n      category: 'Отделочные работы',\n      date: '2024-03-10',\n      image: '/images/projects/project2.jpg'\n    }]);\n    const showAddModal = ref(false);\n    const editingProject = ref(null);\n    const projectForm = ref({\n      title: '',\n      description: '',\n      category: '',\n      date: '',\n      image: null\n    });\n    const editProject = project => {\n      editingProject.value = project;\n      projectForm.value = {\n        ...project\n      };\n      showAddModal.value = true;\n    };\n    const deleteProject = project => {\n      if (confirm('Вы уверены, что хотите удалить этот проект?')) {\n        projects.value = projects.value.filter(p => p.id !== project.id);\n      }\n    };\n    const handleImageUpload = event => {\n      const file = event.target.files[0];\n      if (file) {\n        // Here you would typically upload the file to your server\n        // and get back a URL to store in projectForm.value.image\n        projectForm.value.image = URL.createObjectURL(file);\n      }\n    };\n    const saveProject = () => {\n      if (editingProject.value) {\n        // Update existing project\n        const index = projects.value.findIndex(p => p.id === editingProject.value.id);\n        if (index !== -1) {\n          projects.value[index] = {\n            ...projectForm.value\n          };\n        }\n      } else {\n        // Add new project\n        projects.value.push({\n          id: projects.value.length + 1,\n          ...projectForm.value\n        });\n      }\n      showAddModal.value = false;\n      editingProject.value = null;\n      projectForm.value = {\n        title: '',\n        description: '',\n        category: '',\n        date: '',\n        image: null\n      };\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Управление проектами\", -1)), _createElementVNode(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: _cache[0] || (_cache[0] = $event => showAddModal.value = true)\n      }, _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n        class: \"fas fa-plus\"\n      }, null, -1), _createTextVNode(\" Добавить проект \")]))]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projects.value, project => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: project.id,\n          class: \"project-card\"\n        }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n          src: project.image,\n          alt: project.title\n        }, null, 8, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString(project.title), 1), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(project.description), 1), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(project.category), 1), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(project.date), 1)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n          class: \"btn btn-sm btn-primary\",\n          onClick: $event => editProject(project)\n        }, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n          class: \"fas fa-edit\"\n        }, null, -1), _createTextVNode(\" Редактировать \")]), 8, _hoisted_12), _createElementVNode(\"button\", {\n          class: \"btn btn-sm btn-danger\",\n          onClick: $event => deleteProject(project)\n        }, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n          class: \"fas fa-trash\"\n        }, null, -1), _createTextVNode(\" Удалить \")]), 8, _hoisted_13)])])]);\n      }), 128))]), showAddModal.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"h3\", null, _toDisplayString(editingProject.value ? 'Редактировать проект' : 'Добавить проект'), 1), _createElementVNode(\"button\", {\n        class: \"close-btn\",\n        onClick: _cache[1] || (_cache[1] = $event => showAddModal.value = false)\n      }, \"×\")]), _createElementVNode(\"form\", {\n        onSubmit: _withModifiers(saveProject, [\"prevent\"]),\n        class: \"project-form\"\n      }, [_createElementVNode(\"div\", _hoisted_17, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Название проекта\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => projectForm.value.title = $event),\n        required: \"\"\n      }, null, 512), [[_vModelText, projectForm.value.title]])]), _createElementVNode(\"div\", _hoisted_18, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"Описание\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => projectForm.value.description = $event),\n        required: \"\"\n      }, null, 512), [[_vModelText, projectForm.value.description]])]), _createElementVNode(\"div\", _hoisted_19, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", null, \"Категория\", -1)), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => projectForm.value.category = $event),\n        required: \"\"\n      }, _cache[13] || (_cache[13] = [_createElementVNode(\"option\", {\n        value: \"Кровельные работы\"\n      }, \"Кровельные работы\", -1), _createElementVNode(\"option\", {\n        value: \"Отделочные работы\"\n      }, \"Отделочные работы\", -1), _createElementVNode(\"option\", {\n        value: \"Бетонные работы\"\n      }, \"Бетонные работы\", -1)]), 512), [[_vModelSelect, projectForm.value.category]])]), _createElementVNode(\"div\", _hoisted_20, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"Изображение\", -1)), _createElementVNode(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload,\n        accept: \"image/*\"\n      }, null, 32)]), _createElementVNode(\"div\", _hoisted_21, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", null, \"Дата\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"date\",\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => projectForm.value.date = $event),\n        required: \"\"\n      }, null, 512), [[_vModelText, projectForm.value.date]])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n        type: \"button\",\n        class: \"btn btn-secondary\",\n        onClick: _cache[6] || (_cache[6] = $event => showAddModal.value = false)\n      }, \" Отмена \"), _createElementVNode(\"button\", _hoisted_23, _toDisplayString(editingProject.value ? 'Сохранить' : 'Добавить'), 1)])], 32)])])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","projects","id","title","description","category","date","image","showAddModal","editingProject","projectForm","editProject","project","value","deleteProject","confirm","filter","p","handleImageUpload","event","file","target","files","URL","createObjectURL","saveProject","index","findIndex","push","length"],"sources":["C:/region24-website/src/views/admin/Projects.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-projects\">\r\n    <div class=\"header\">\r\n      <h2>Управление проектами</h2>\r\n      <button class=\"btn btn-primary\" @click=\"showAddModal = true\">\r\n        <i class=\"fas fa-plus\"></i> Добавить проект\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"projects-grid\">\r\n      <div v-for=\"project in projects\" :key=\"project.id\" class=\"project-card\">\r\n        <div class=\"project-image\">\r\n          <img :src=\"project.image\" :alt=\"project.title\">\r\n        </div>\r\n        <div class=\"project-content\">\r\n          <h3>{{ project.title }}</h3>\r\n          <p class=\"project-description\">{{ project.description }}</p>\r\n          <div class=\"project-meta\">\r\n            <span class=\"project-category\">{{ project.category }}</span>\r\n            <span class=\"project-date\">{{ project.date }}</span>\r\n          </div>\r\n          <div class=\"project-actions\">\r\n            <button class=\"btn btn-sm btn-primary\" @click=\"editProject(project)\">\r\n              <i class=\"fas fa-edit\"></i> Редактировать\r\n            </button>\r\n            <button class=\"btn btn-sm btn-danger\" @click=\"deleteProject(project)\">\r\n              <i class=\"fas fa-trash\"></i> Удалить\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add/Edit Project Modal -->\r\n    <div v-if=\"showAddModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h3>{{ editingProject ? 'Редактировать проект' : 'Добавить проект' }}</h3>\r\n          <button class=\"close-btn\" @click=\"showAddModal = false\">&times;</button>\r\n        </div>\r\n        <form @submit.prevent=\"saveProject\" class=\"project-form\">\r\n          <div class=\"form-group\">\r\n            <label>Название проекта</label>\r\n            <input type=\"text\" v-model=\"projectForm.title\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Описание</label>\r\n            <textarea v-model=\"projectForm.description\" required></textarea>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Категория</label>\r\n            <select v-model=\"projectForm.category\" required>\r\n              <option value=\"Кровельные работы\">Кровельные работы</option>\r\n              <option value=\"Отделочные работы\">Отделочные работы</option>\r\n              <option value=\"Бетонные работы\">Бетонные работы</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Изображение</label>\r\n            <input type=\"file\" @change=\"handleImageUpload\" accept=\"image/*\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Дата</label>\r\n            <input type=\"date\" v-model=\"projectForm.date\" required>\r\n          </div>\r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddModal = false\">\r\n              Отмена\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">\r\n              {{ editingProject ? 'Сохранить' : 'Добавить' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst projects = ref([\r\n  {\r\n    id: 1,\r\n    title: 'Кровельные работы в жилом доме',\r\n    description: 'Комплексные кровельные работы с использованием современных материалов',\r\n    category: 'Кровельные работы',\r\n    date: '2024-03-15',\r\n    image: '/images/projects/project1.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Отделка квартиры',\r\n    description: 'Полный цикл отделочных работ в современном стиле',\r\n    category: 'Отделочные работы',\r\n    date: '2024-03-10',\r\n    image: '/images/projects/project2.jpg'\r\n  }\r\n])\r\n\r\nconst showAddModal = ref(false)\r\nconst editingProject = ref(null)\r\nconst projectForm = ref({\r\n  title: '',\r\n  description: '',\r\n  category: '',\r\n  date: '',\r\n  image: null\r\n})\r\n\r\nconst editProject = (project) => {\r\n  editingProject.value = project\r\n  projectForm.value = { ...project }\r\n  showAddModal.value = true\r\n}\r\n\r\nconst deleteProject = (project) => {\r\n  if (confirm('Вы уверены, что хотите удалить этот проект?')) {\r\n    projects.value = projects.value.filter(p => p.id !== project.id)\r\n  }\r\n}\r\n\r\nconst handleImageUpload = (event) => {\r\n  const file = event.target.files[0]\r\n  if (file) {\r\n    // Here you would typically upload the file to your server\r\n    // and get back a URL to store in projectForm.value.image\r\n    projectForm.value.image = URL.createObjectURL(file)\r\n  }\r\n}\r\n\r\nconst saveProject = () => {\r\n  if (editingProject.value) {\r\n    // Update existing project\r\n    const index = projects.value.findIndex(p => p.id === editingProject.value.id)\r\n    if (index !== -1) {\r\n      projects.value[index] = { ...projectForm.value }\r\n    }\r\n  } else {\r\n    // Add new project\r\n    projects.value.push({\r\n      id: projects.value.length + 1,\r\n      ...projectForm.value\r\n    })\r\n  }\r\n  showAddModal.value = false\r\n  editingProject.value = null\r\n  projectForm.value = {\r\n    title: '',\r\n    description: '',\r\n    category: '',\r\n    date: '',\r\n    image: null\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/main.scss';\r\n\r\n.admin-projects {\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .projects-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    gap: 1.5rem;\r\n  }\r\n\r\n  .project-card {\r\n    background: white;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n\r\n    .project-image {\r\n      height: 200px;\r\n      overflow: hidden;\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    .project-content {\r\n      padding: 1.5rem;\r\n\r\n      h3 {\r\n        margin: 0 0 0.5rem;\r\n      }\r\n\r\n      .project-description {\r\n        color: #666;\r\n        margin-bottom: 1rem;\r\n      }\r\n\r\n      .project-meta {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 1rem;\r\n        font-size: 0.875rem;\r\n        color: #666;\r\n      }\r\n\r\n      .project-actions {\r\n        display: flex;\r\n        gap: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n\r\n    .modal-content {\r\n      background: white;\r\n      border-radius: 8px;\r\n      width: 100%;\r\n      max-width: 500px;\r\n      max-height: 90vh;\r\n      overflow-y: auto;\r\n    }\r\n\r\n    .modal-header {\r\n      padding: 1rem;\r\n      border-bottom: 1px solid #eee;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      h3 {\r\n        margin: 0;\r\n      }\r\n\r\n      .close-btn {\r\n        background: none;\r\n        border: none;\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n        color: #666;\r\n      }\r\n    }\r\n\r\n    .project-form {\r\n      padding: 1.5rem;\r\n\r\n      .form-group {\r\n        margin-bottom: 1rem;\r\n\r\n        label {\r\n          display: block;\r\n          margin-bottom: 0.5rem;\r\n          color: #666;\r\n        }\r\n\r\n        input[type=\"text\"],\r\n        input[type=\"date\"],\r\n        select,\r\n        textarea {\r\n          width: 100%;\r\n          padding: 0.5rem;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        textarea {\r\n          height: 100px;\r\n          resize: vertical;\r\n        }\r\n      }\r\n\r\n      .form-actions {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 1rem;\r\n        margin-top: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,SAASA,GAAG,QAAQ,KAAK;;;;IAEzB,MAAMC,QAAQ,GAAGD,GAAG,CAAC,CACnB;MACEE,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,gCAAgC;MACvCC,WAAW,EAAE,uEAAuE;MACpFC,QAAQ,EAAE,mBAAmB;MAC7BC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACT,CAAC,EACD;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,kBAAkB;MACzBC,WAAW,EAAE,kDAAkD;MAC/DC,QAAQ,EAAE,mBAAmB;MAC7BC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACT,CAAC,CACF,CAAC;IAEF,MAAMC,YAAY,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMS,cAAc,GAAGT,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMU,WAAW,GAAGV,GAAG,CAAC;MACtBG,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMI,WAAW,GAAIC,OAAO,IAAK;MAC/BH,cAAc,CAACI,KAAK,GAAGD,OAAO;MAC9BF,WAAW,CAACG,KAAK,GAAG;QAAE,GAAGD;MAAQ,CAAC;MAClCJ,YAAY,CAACK,KAAK,GAAG,IAAI;IAC3B,CAAC;IAED,MAAMC,aAAa,GAAIF,OAAO,IAAK;MACjC,IAAIG,OAAO,CAAC,6CAA6C,CAAC,EAAE;QAC1Dd,QAAQ,CAACY,KAAK,GAAGZ,QAAQ,CAACY,KAAK,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACf,EAAE,KAAKU,OAAO,CAACV,EAAE,CAAC;MAClE;IACF,CAAC;IAED,MAAMgB,iBAAiB,GAAIC,KAAK,IAAK;MACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR;QACA;QACAV,WAAW,CAACG,KAAK,CAACN,KAAK,GAAGgB,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACrD;IACF,CAAC;IAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIhB,cAAc,CAACI,KAAK,EAAE;QACxB;QACA,MAAMa,KAAK,GAAGzB,QAAQ,CAACY,KAAK,CAACc,SAAS,CAACV,CAAC,IAAIA,CAAC,CAACf,EAAE,KAAKO,cAAc,CAACI,KAAK,CAACX,EAAE,CAAC;QAC7E,IAAIwB,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBzB,QAAQ,CAACY,KAAK,CAACa,KAAK,CAAC,GAAG;YAAE,GAAGhB,WAAW,CAACG;UAAM,CAAC;QAClD;MACF,CAAC,MAAM;QACL;QACAZ,QAAQ,CAACY,KAAK,CAACe,IAAI,CAAC;UAClB1B,EAAE,EAAED,QAAQ,CAACY,KAAK,CAACgB,MAAM,GAAG,CAAC;UAC7B,GAAGnB,WAAW,CAACG;QACjB,CAAC,CAAC;MACJ;MACAL,YAAY,CAACK,KAAK,GAAG,KAAK;MAC1BJ,cAAc,CAACI,KAAK,GAAG,IAAI;MAC3BH,WAAW,CAACG,KAAK,GAAG;QAClBV,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT,CAAC;IACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}