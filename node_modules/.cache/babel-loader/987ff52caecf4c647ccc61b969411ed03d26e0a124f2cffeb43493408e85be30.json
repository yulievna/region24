{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AdminLogin',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      username: '',\n      password: ''\n    });\n    const handleLogin = async () => {\n      // Here you would typically validate credentials against your backend\n      if (form.value.username === 'admin' && form.value.password === 'admin') {\n        // Store authentication token or state\n        localStorage.setItem('adminAuth', 'true');\n        router.push('/admin/dashboard');\n      } else {\n        alert('Неверный логин или пароль');\n      }\n    };\n    const __returned__ = {\n      router,\n      form,\n      handleLogin,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","router","form","username","password","handleLogin","value","localStorage","setItem","push","alert"],"sources":["C:/region24-website/src/views/admin/AdminLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-login\">\r\n    <div class=\"login-container\">\r\n      <div class=\"login-header\">\r\n        <img src=\"@/assets/images/logo.svg\" alt=\"Регион 24\" class=\"logo\">\r\n        <h1>Панель управления</h1>\r\n      </div>\r\n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Логин</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"username\" \r\n            v-model=\"form.username\" \r\n            required\r\n            placeholder=\"Введите логин\"\r\n          >\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Пароль</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"form.password\" \r\n            required\r\n            placeholder=\"Введите пароль\"\r\n          >\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Войти</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter()\r\nconst form = ref({\r\n  username: '',\r\n  password: ''\r\n})\r\n\r\nconst handleLogin = async () => {\r\n  // Here you would typically validate credentials against your backend\r\n  if (form.value.username === 'admin' && form.value.password === 'admin') {\r\n    // Store authentication token or state\r\n    localStorage.setItem('adminAuth', 'true')\r\n    router.push('/admin/dashboard')\r\n  } else {\r\n    alert('Неверный логин или пароль')\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/main.scss';\r\n\r\n.admin-login {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f6fa;\r\n}\r\n\r\n.login-container {\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n\r\n  .logo {\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  h1 {\r\n    color: #2c3e50;\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n\r\n.login-form {\r\n  .form-group {\r\n    margin-bottom: 1.5rem;\r\n\r\n    label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0.75rem;\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      font-size: 1rem;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: $primary-color;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    padding: 0.75rem;\r\n    background: $primary-color;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n\r\n    &:hover {\r\n      background: darken($primary-color, 10%);\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AAmCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAME,IAAI,GAAGH,GAAG,CAAC;MACfI,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACA,IAAIH,IAAI,CAACI,KAAK,CAACH,QAAQ,KAAK,OAAO,IAAID,IAAI,CAACI,KAAK,CAACF,QAAQ,KAAK,OAAO,EAAE;QACtE;QACAG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QACzCP,MAAM,CAACQ,IAAI,CAAC,kBAAkB,CAAC;MACjC,CAAC,MAAM;QACLC,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}