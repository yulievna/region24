{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"service-details\"\n};\nconst _hoisted_2 = {\n  class: \"service-header\"\n};\nconst _hoisted_3 = {\n  class: \"service-title\"\n};\nconst _hoisted_4 = {\n  class: \"service-image\"\n};\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"service-content\"\n};\nconst _hoisted_7 = {\n  class: \"service-description\"\n};\nconst _hoisted_8 = {\n  class: \"service-features\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CompletedProjects = _resolveComponent(\"CompletedProjects\");\n  const _component_ServiceCalculator = _resolveComponent(\"ServiceCalculator\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, _toDisplayString($data.service.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: $data.service.image,\n    alt: $data.service.title\n  }, null, 8 /* PROPS */, _hoisted_5)])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Описание услуги\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.service.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Преимущества\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.service.features, (feature, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(feature), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_CompletedProjects, {\n    projects: $data.service.projects\n  }, null, 8 /* PROPS */, [\"projects\"]), _createVNode(_component_ServiceCalculator, {\n    serviceTypes: [$data.service]\n  }, null, 8 /* PROPS */, [\"serviceTypes\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","service","title","_hoisted_4","src","image","alt","_hoisted_5","_hoisted_6","_hoisted_7","description","_hoisted_8","_Fragment","_renderList","features","feature","index","key","_createVNode","_component_CompletedProjects","projects","_component_ServiceCalculator","serviceTypes"],"sources":["C:\\region24-website\\src\\views\\ServiceDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"service-details\">\r\n    <div class=\"service-header\">\r\n      <h1 class=\"service-title\">{{ service.title }}</h1>\r\n      <div class=\"service-image\">\r\n        <img :src=\"service.image\" :alt=\"service.title\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"service-content\">\r\n      <div class=\"service-description\">\r\n        <h2>Описание услуги</h2>\r\n        <p>{{ service.description }}</p>\r\n      </div>\r\n\r\n      <div class=\"service-features\">\r\n        <h2>Преимущества</h2>\r\n        <ul>\r\n          <li v-for=\"(feature, index) in service.features\" :key=\"index\">\r\n            {{ feature }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <CompletedProjects :projects=\"service.projects\" />\r\n      \r\n      <ServiceCalculator :serviceTypes=\"[service]\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CompletedProjects from '@/components/CompletedProjects.vue'\r\nimport ServiceCalculator from '@/components/ServiceCalculator.vue'\r\n\r\nexport default {\r\n  name: 'ServiceDetails',\r\n  components: {\r\n    CompletedProjects,\r\n    ServiceCalculator\r\n  },\r\n  data() {\r\n    return {\r\n      service: {\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        image: '',\r\n        features: [],\r\n        projects: []\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // Здесь будет логика получения данных об услуге по ID из параметров маршрута\r\n    const serviceId = this.$route.params.id\r\n    // TODO: Заменить на реальный API-запрос\r\n    this.fetchServiceData(serviceId)\r\n  },\r\n  methods: {\r\n    fetchServiceData(serviceId) {\r\n      // Временные данные для демонстрации\r\n      this.service = {\r\n        id: serviceId,\r\n        title: 'Название услуги',\r\n        description: 'Подробное описание услуги...',\r\n        image: '/path/to/image.jpg',\r\n        features: [\r\n          'Преимущество 1',\r\n          'Преимущество 2',\r\n          'Преимущество 3'\r\n        ],\r\n        projects: [\r\n          {\r\n            id: 1,\r\n            title: 'Проект 1',\r\n            description: 'Описание проекта 1',\r\n            image: '/path/to/project1.jpg',\r\n            date: '2024',\r\n            location: 'Москва'\r\n          },\r\n          // Добавьте больше проектов по необходимости\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.service-details {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.service-header {\r\n  margin-bottom: 3rem;\r\n}\r\n\r\n.service-title {\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.service-image {\r\n  width: 100%;\r\n  height: 400px;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n}\r\n\r\n.service-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.service-content {\r\n  display: grid;\r\n  gap: 4rem;\r\n}\r\n\r\n.service-description,\r\n.service-features {\r\n  max-width: 800px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.8rem;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.service-description p {\r\n  font-size: 1.1rem;\r\n  line-height: 1.6;\r\n  color: #666;\r\n}\r\n\r\n.service-features ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.service-features li {\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n  padding: 0.5rem 0;\r\n  padding-left: 1.5rem;\r\n  position: relative;\r\n}\r\n\r\n.service-features li::before {\r\n  content: \"•\";\r\n  color: #4CAF50;\r\n  position: absolute;\r\n  left: 0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .service-details {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .service-title {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .service-image {\r\n    height: 300px;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAe;;EACpBA,KAAK,EAAC;AAAe;mBAJhC;;EASSA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAqB;;EAK3BA,KAAK,EAAC;AAAkB;;;;uBAdjCC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,mBAAA,CAKM,OALNC,UAKM,GAJJD,mBAAA,CAAkD,MAAlDE,UAAkD,EAAAC,gBAAA,CAArBC,KAAA,CAAAC,OAAO,CAACC,KAAK,kBAC1CN,mBAAA,CAEM,OAFNO,UAEM,GADJP,mBAAA,CAA+C;IAAzCQ,GAAG,EAAEJ,KAAA,CAAAC,OAAO,CAACI,KAAK;IAAGC,GAAG,EAAEN,KAAA,CAAAC,OAAO,CAACC;0BALhDK,UAAA,E,KASIX,mBAAA,CAkBM,OAlBNY,UAkBM,GAjBJZ,mBAAA,CAGM,OAHNa,UAGM,G,0BAFJb,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAAgC,WAAAG,gBAAA,CAA1BC,KAAA,CAAAC,OAAO,CAACS,WAAW,iB,GAG3Bd,mBAAA,CAOM,OAPNe,UAOM,G,0BANJf,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKkB,SAAA,QApBfC,WAAA,CAkByCb,KAAA,CAAAC,OAAO,CAACa,QAAQ,EAlBzD,CAkBsBC,OAAO,EAAEC,KAAK;yBAA1BtB,mBAAA,CAEK;MAF6CuB,GAAG,EAAED;IAAK,GAAAjB,gBAAA,CACvDgB,OAAO;sCAKhBG,YAAA,CAAkDC,4BAAA;IAA9BC,QAAQ,EAAEpB,KAAA,CAAAC,OAAO,CAACmB;yCAEtCF,YAAA,CAA+CG,4BAAA;IAA3BC,YAAY,GAAGtB,KAAA,CAAAC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}